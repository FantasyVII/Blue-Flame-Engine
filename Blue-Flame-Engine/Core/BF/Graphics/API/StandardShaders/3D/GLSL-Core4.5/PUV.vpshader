vertexShader = R"(
#version 450 core
layout(location = 0) in vec3 inPosition;
layout(location = 1) in vec2 inUV;

layout (std140, binding = 0) uniform camera_data
{
	mat4 buffer_modelMatrix;
	mat4 buffer_viewMatrix;
	mat4 buffer_projectionMatrix;
	vec4 cameraPos;
};

out struct data
{
	vec2 UV;
} shared_data;

void main()
{
	vec4 worldSpace = buffer_modelMatrix * vec4(inPosition.xyz, 1.0f);
	gl_Position = buffer_projectionMatrix * buffer_viewMatrix * worldSpace;

	shared_data.UV = inUV;
}
)";

pixelShader = R"(
#version 450 core

struct Material
{
	vec4 ambientColor;
	vec4 diffuseColor;
	vec4 specularColor;
	float shininess;
};

layout (std140, binding = 2) uniform MaterialUniform
{
	Material material;
};

in struct data
{
	vec2 UV;
} shared_data;

out vec4 color;

uniform sampler2D diffuseMap;

void main() 
{
	color = texture(diffuseMap, shared_data.UV);
}
)";